jobs:
- name: dns-prod
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: 18f-dns-repo
      trigger: true
  - task: apply-dns-terraform
    file: pipeline-tasks/terraform-apply.yml
    input_mapping: { terraform-templates: 18f-dns-repo }
    params:
      TERRAFORM_ACTION: apply
      STACK_NAME: dns_prod
      TEMPLATE_SUBDIR: terraform
      S3_TFSTATE_BUCKET: tts-dns-prod
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_DEFAULT_REGION: us-east-1
    on_failure:
      put: slack
      params: &slack-params
        text: |
          :x: FAILED to deploy dns on production
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        <<: *slack-params
        text: |
          :white_check_mark: Successfully deployed dns on production
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: https://github.com/18f/cg-pipeline-tasks
    branch: master

- name: 18f-dns-repo
  type: git
  source:
    uri: https://github.com/18f/dns
    branch: deploy

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
